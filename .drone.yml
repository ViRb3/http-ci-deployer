kind: pipeline
name: build-amd64

platform:
  os: linux
  arch: amd64

x-shared: &shared
  username:
    from_secret: username
  password:
    from_secret: password
  auto_tag: true
  force_tag: true
  repo: virb3/http-ci-deployer

steps:
  - name: test
    image: golang
    volumes:
      - name: deps
        path: /go
    commands:
      - go test -race -v ./... -cover

  - name: version
    image: node:13
    commands:
      - npx semantic-release
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    depends_on:
      - test

  - name: release-binaries
    image: golang
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: deps
        path: /go
    commands:
      - curl -sL https://github.com/goreleaser/goreleaser/releases/download/v0.132.1/goreleaser_Linux_x86_64.tar.gz | tar xzf - -C /tmp
      - /tmp/goreleaser -f "$PWD/.goreleaser.amd.yml"
      - curl -sL -o gomplate https://github.com/hairyhenderson/gomplate/releases/download/v3.6.0/gomplate_linux-amd64-slim
      - chmod +x gomplate
      - ARCH=amd64 DIST_NAME="linux_amd64" ./gomplate -f Dockerfile.templ -o Dockerfile.amd64
      - ARCH=i386  DIST_NAME="linux_386"   ./gomplate -f Dockerfile.templ -o Dockerfile.386
    depends_on:
      - version
    when:
      event: tag

  - name: release-docker-amd64
    image: plugins/docker
    settings:
      <<: *shared
      auto_tag_suffix: amd64
      dockerfile: Dockerfile.amd64
    depends_on:
      - release-binaries
    when:
      event: tag

  - name: release-docker-386
    image: plugins/docker
    settings:
      <<: *shared
      auto_tag_suffix: "386"
      dockerfile: Dockerfile.386
    depends_on:
      - release-binaries
    when:
      event: tag

volumes:
  - name: deps
    temp: {}

---
kind: pipeline
name: build-arm64

platform:
  os: linux
  arch: arm64

x-shared: &shared
  username:
    from_secret: username
  password:
    from_secret: password
  auto_tag: true
  force_tag: true
  repo: virb3/http-ci-deployer

steps:
  - name: test
    image: golang
    volumes:
      - name: deps
        path: /go
    commands:
      - go test -race -v ./... -cover

  - name: fetch
    image: alpine
    commands:
      - apk add --no-cache git
      - git fetch origin refs/tags/"$DRONE_TAG":refs/tags/"$DRONE_TAG"
    depends_on:
      - test
    when:
      event: tag

  - name: release-binaries
    image: golang
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: deps
        path: /go
    commands:
      - curl -sL https://github.com/goreleaser/goreleaser/releases/download/v0.132.1/goreleaser_Linux_arm64.tar.gz | tar xzf - -C /tmp
      - /tmp/goreleaser -f "$PWD/.goreleaser.arm.yml"
      - curl -sL -o gomplate https://github.com/hairyhenderson/gomplate/releases/download/v3.6.0/gomplate_linux-arm64-slim
      - chmod +x gomplate
      - ARCH=arm64v8 DIST_NAME="linux_arm64" ./gomplate -f Dockerfile.templ -o Dockerfile.arm64
      - ARCH=arm32v7 DIST_NAME="linux_arm_7" ./gomplate -f Dockerfile.templ -o Dockerfile.armv7
      - ARCH=arm32v6 DIST_NAME="linux_arm_6" ./gomplate -f Dockerfile.templ -o Dockerfile.armv6
    depends_on:
      - fetch
    when:
      event: tag

  - name: release-docker-arm64
    image: plugins/docker
    settings:
      <<: *shared
      auto_tag_suffix: arm64
      dockerfile: Dockerfile.arm64
    depends_on:
      - release-binaries
    when:
      event: tag

  - name: release-docker-armv7
    image: plugins/docker
    settings:
      <<: *shared
      auto_tag_suffix: armv7
      dockerfile: Dockerfile.armv7
    depends_on:
      - release-binaries
    when:
      event: tag

  - name: release-docker-armv6
    image: plugins/docker
    settings:
      <<: *shared
      auto_tag_suffix: armv6
      dockerfile: Dockerfile.armv6
    depends_on:
      - release-binaries
    when:
      event: tag

volumes:
  - name: deps
    temp: {}
